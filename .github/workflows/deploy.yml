name: Build and Deploy
on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      # - name: Publish JS filename
      #   id: publish
      #   run: find build/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: build
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: beta
    env:
      HOST: ${{ secrets.HOST }}
      USER: ${{ secrets.USER }}
      KEY: ${{ secrets.KEY }}
      PORT: ${{ secrets.PORT }}
      NAME: deploy-server
    steps:
      - name: create key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ env.KEY }}" > ~/.ssh/${{ env.NAME }}.key
          sudo chmod 600 ~/.ssh/${{ env.NAME }}.key
        shell: bash
      - name: Scan the public ssh host keys
        run: ssh-keyscan -H ${{ env.HOST }} >> ~/.ssh/known_hosts
        shell: bash
      - name: Create SSH config
        run: |
          cat >>~/.ssh/config <<END
          Host ${{ env.NAME }}
            HostName ${{ env.HOST }}
            Port ${{ env.PORT }}
            User ${{ env.USER }}
            IdentityFile ~/.ssh/${{ env.NAME }}.key
          END
        shell: bash
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: build-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
      - name: run commands
        run:  |
          scp -r build-files/* ${{env.NAME}}:~/my-day
        shell: bash
      - name: run sample commands
        run:  |
          ssh ${{env.NAME}} << EOF
            ls
            rm -rf hello-world
            mkdir hello-world
            cd hello-world
            echo "hey hi" > index.html
            cat index.html
          EOF
        shell: bash
